#include "cuda_runtime.h"
#include "device_launch_parameters.h"

#include <stdio.h>


__global__ void idx_calc_thId(int* input)
{
    int tid = threadIdx.x + threadIdx.y * blockDim.x;
    int offsetBlock = blockIdx.x * blockDim.x * blockDim.y;
    int offsetRow = blockIdx.y * blockDim.x * blockDim.y * gridDim.x;
    int gid = tid + offsetBlock + offsetRow;
    printf("[DEVICE] gridDim.x %d,  blockIdx.x %d, blockIdz.y %d, threadIdx %d, gid: %d, data: %d\n\r", gridDim.x, blockIdx.x, blockIdx.y, tid, gid, input[gid]);
}

int main() {
 
    const int N = 16;
    int size = N * sizeof(int);
    const int a[N] = { 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16 };

    int* d_a;

    cudaMalloc(&d_a, size);

    cudaMemcpy(d_a, a, size, cudaMemcpyHostToDevice);

    dim3 grid(2, 2);
    dim3 block(2, 2);
    idx_calc_thId << <grid, block >> > (d_a);
    cudaDeviceSynchronize();

    cudaDeviceReset();

    cudaFree(d_a);

    return 0;
}
